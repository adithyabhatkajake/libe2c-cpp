#+TITLE: Resources

* Links
** [[https://github.com/hot-stuff/libhotstuff][HotStuff GitHub]]


* Files to Port
** DONE [10/10] include/libe2c
*** [X] consensus.h
*** [X] client.h
*** [X] crypto.h
*** [X] entity.h
*** [X] hotstuff.h
*** [X] liveness.h
*** [X] promise.hpp
*** [X] task.h
*** [X] util.h
*** [X] type.h

** DONE [3/3] examples
*** [X] CmakeLists.txt
*** [X] e2c_app
*** [X] e2c_client

** DONE [0/0] tests
*** [X] secp256k1_test
*** [X] CmakeLists

** DONE [9/9] source
*** [X] client.cpp
Compiles Correctly
*** [X] config.h.in
*** [X] consensus.cpp
*** [X] crypto.cpp
*** [X] entity.cpp
*** [X] hotstuff.cpp
*** [X] hotstuff_keygen.cpp
*** [X] hotstuff_tls_keygen.cpp
*** [X] util.cpp

** DONE [4/4] scripts
*** DONE faulty_leader_demo.sh
A script to automate the demo of fault tolerance in E2C
*** [X] gen_conf.py
A script that generates the configuration such as public keys, base ports and other settings.
*** [X] run_demo.sh
A script to automate the steady state with correct leader runs.
*** [X] run_demo_client.sh
A script that runs the clients to the automated replication service.


* TODO [5/8] Work left to do
** DONE [X] Check if everything compiles
Make sure to add all the sources in Cmakelists and ensure that there are no compilation errors at least.
** DONE [0/0] Test if the protocol works
Run it and see if the code crashes or not. In the beginning it should just print the stats or something.
*** DONE [X] Enable Code Logging to ensure that the protocol works.
*** DONE [X] steady_state_correct_leader_test
** DONE [X] Implement E2C Best Case
** TODO [ ] Implement E2C View Change
Implement the faulty proposer scenario. Start with a script that starts other nodes so that we can manually start the proposer on our own.
*** TODO [ ] faults.sh
A script that starts all nodes except the proposer.
*** TODO [ ] Implementation update
Start by implementing an impeach timer. High level code works as follows:
1. If no blocks are received in 2\delta since last commit then send <<BLAME,proposer>,signature>.
2. Accept proposals only if we are not quitting this view.
3. On collecting f+1 blame messages, stop accepting new blocks from this proposer.
4. Update pace_maker's proposer and perform impeach.
5. Create a certificate from f+1 blame messages and broadcast them to everyone.
6. On receiving a blame certificate, if we haven't already quit the view, quit the view and stop accepting blocks from this proposer.
7. Send a Request for votes for b_mark and b_comm.
8. Collect votes for b_mark and b_comm.
9. Make a certificate for b_mark and b_comm.
10. Send the new certificate to the new leader.
